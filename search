#!/usr/local/bin/node

// Usage: "search --term [SEARCHTERM] [--all]" (or "search [SEARCHTERM]")
// Returns 1 result by default, --all returns all

var request = require('request')
var argv = require('minimist')(process.argv.slice(2))

function print(result) {
    console.log(result.name +
        "\nby " + result.author +
        "\ni: " + result.icon + 
        "\nu: " + result.url + "\n");
}

function printHTML(result) {
    console.log("\t<div class='game'>\n\t\t<h3><a href='" + result.url + "'>" + result.name + "</a></h3>\n\t\t<a href='" + result.url + "'><img class='icon' src='" + result.icon + "'/></a>\n\t\t<p>DESCRIPTION</p>\n\t</div>\n");
}

function printMiniHTML(result) {
    console.log("\t<li><a href='" + result.url + "'>" + result.name + "</a>: DESCRIPTION.</li>\n");
}

function printAll(result) {
    print(result)
    printHTML(result)
    printMiniHTML(result)
}

if (!argv.term) argv.term = process.argv[2]

var entity = (argv.ipad ? "iPadSoftware" : "software")
var url = "https://itunes.apple.com/search?media=software&entity=" + entity + "&term=" + argv.term
request(url, function(err, response, body) {
    var json = JSON.parse(body)
    var results = json.results.map(function (result) {
        return {
            name: result.trackName,
            author: result.sellerName,
            icon: result["artworkUrl100"],
            url: result.trackViewUrl
        }
    })

    if (argv.all) {
        var printFn = (argv.html ? printHTML : print)
            printFn = (argv['mini-html'] ? printMiniHTML : printFn)
        results.forEach(printFn)
    } else {
        printAll(results[0])
    }

});
